schema {
  query: Query
  mutation: Mutation
}

type ApiCollectionOfImportTicketItem {
  items: [ImportTicketItem!]!
  totalCount: Int!
}

type ApiCollectionOfPlayer {
  items: [Player!]!
  totalCount: Int!
}

type ApiCollectionOfTicket {
  items: [Ticket!]!
  totalCount: Int!
}

type CreateTicketResponse {
  id: UUID!
  gameId: UUID!
  name: String!
  description: String!
}

type Game {
  players: ApiCollectionOfPlayer!
  settings: GameSettings!
  id: UUID!
  name: String!
  description: String!
}

type GameSettings {
  game: Game!
  id: UUID!
  gameId: UUID!
  votingTime: Int!
  isBreakAllowed: Boolean!
}

type GameUserPair {
  gameId: UUID!
  userId: UUID!
}

type ImportTicketItem {
  name: String!
  description: String!
}

type Mutation {
  ping: String!
  createGame(name: String! description: String!): Game!
  joinGame(gameId: UUID!): GameUserPair!
  leaveGame(gameId: UUID!): GameUserPair!
  createGameSettings(gameId: UUID! votingTime: Int! isBreakAllowed: Boolean!): GameSettings!
  updateGameSettings(id: UUID! gameId: UUID! votingTime: Int! isBreakAllowed: Boolean!): GameSettings!
  createTicket(gameId: UUID! name: String! description: String!): CreateTicketResponse!
  updateTicket(ticketId: UUID! name: String! description: String!): UpdateTicketResponse!
  deleteTicket(ticketId: UUID!): Boolean!
  importTickets(gameId: UUID! data: ApiCollectionOfImportTicketItemInput!): ApiCollectionOfImportTicketItem!
}

type Player {
  id: UUID!
  name: String!
}

type Query {
  ping: String!
  info: String!
  game(gameId: UUID!): Game!
  players(gameId: UUID!): ApiCollectionOfPlayer!
  gameSettings(gameId: UUID!): GameSettings!
  ticket(ticketId: UUID!): Ticket!
  tickets(gameId: UUID!): ApiCollectionOfTicket!
}

type Ticket {
  game: Game!
  id: UUID!
  gameId: UUID!
  name: String!
  description: String!
}

type UpdateTicketResponse {
  id: UUID!
  gameId: UUID!
  name: String!
  description: String!
}

input ApiCollectionOfImportTicketItemInput {
  items: [ImportTicketItemInput!]!
  totalCount: Int!
}

input ImportTicketItemInput {
  name: String!
  description: String!
}

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")
